buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'nu.studer:gradle-jooq-plugin:2.0.9'
        classpath 'mysql:mysql-connector-java:5.1.40'
    }

}
plugins {
    id "org.flywaydb.flyway" version "4.1.0"
}

def loadProperties() {
    def props = new Properties()
    file("$rootDir/src/main/resources/application-local.properties").withInputStream {
        props.load(it)
    }
    return props
}

def properties = loadProperties()
def URL = properties.getProperty("spring.datasource.url")
def USER = properties.getProperty("spring.datasource.username")
def PASSWORD = properties.getProperty("spring.datasource.password")

flyway {
    url = URL
    user = USER
    password = PASSWORD
    schemas = ['matcheam']
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'

bootRun {
    args = ["--spring.profiles.active=local"]
}

jar {
    baseName = 'matcheam'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['src/main/java','build/generated-sources']

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.thymeleaf:thymeleaf-spring4')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time')
    compile('org.springframework:spring-jdbc')
    compile('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.ninja-squad:DbSetup:2.1.0')

    jooqRuntime 'mysql:mysql-connector-java:5.1.40'
}

jooq {
    version = '3.9.1'
    matcheam(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = URL
            user = USER
            password = PASSWORD

        }
        generator {
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'matcheam'
                forcedTypes {
                    forcedType {
                        name = 'DECIMAL'
                        expression = '.*'
                        types = 'DECIMAL.*'
                    }
                }
            }
            target {
                packageName = 'matcheam.jooq.generate'
                directory = 'build/generated-sources'
            }
	        generate {
	        	javaTimeTypes = true
	        }
        }
    }
}
